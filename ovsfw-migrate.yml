---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# (c) 2017, James Denton <james.denton@rackspace.com>

- hosts: compute_hosts
  tasks:
  - name: Initialize some variables
    set_fact:
      migrate: false
      mysql_user: "root"
      mysql_pass: "{{ galera_root_password }}"
      mysql_host: "{{ internal_lb_vip_address }}"
      false_ports: []

  - name: Get OSA version
    shell: |
      grep -oP 'DISTRIB_RELEASE="\K[^"]+' /etc/openstack-release
    register: osa_version

  - name: Gather instances from virsh
    shell: |
      virsh -q list
    register: running_instances

  - name: Check for running instances
    fail: msg="Please stop all running instances on this node"
    when: running_instances.stdout_lines|length > 0

  - name: Find all ports on a given compute node
    shell: |
      source /root/openrc
      /openstack/venvs/neutron-{{ osa_version.stdout }}/bin/neutron port-list --binding:host_id='{{container_name}}' -c 'id' -c 'binding:host_id' -c 'binding:vif_details' -f json
    register: compute_ports_json
    args:
      executable: /bin/bash

  - name: Find all ports on a given compute node whose ovs_hybrid_plug=false
    set_fact: 
      false_ports: "{{ false_ports }} + [ '{{ item['id'] }}' ]"
    when: not item['binding:vif_details']['ovs_hybrid_plug']
    with_items: 
      - "{{ compute_ports_json.stdout|from_json }}"

  - name: Determine whether we need to migrate on this host
    set_fact: 
      "migrate": true
    when: false_ports|length > 0

  - debug: var=migrate

  - name: Backup the Neutron DB
    mysql_db: 
      state: dump 
      name: neutron 
      target: /tmp/neutron_{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}.sql
      login_user: root
      login_password: "{{ mysql_pass }}"
      login_host: "{{ mysql_host }}"
    when: migrate

  - name: Stop neutron services
    service:
      name: "{{ item }}"
      state: stopped
    with_items:
    - neutron-openvswitch-agent
    when: migrate

  - name: Stop nova services
    service:
      name: "{{ item }}"
      state: stopped
    with_items:
    - nova-compute
    when: migrate

  - name: Replace firewall driver in config files
    lineinfile: dest={{ item }} regexp='^firewall_driver' line='firewall_driver = iptables_hybrid'
    with_items:
      - "/etc/neutron/plugins/ml2/ml2_conf.ini"
      - "/etc/neutron/plugins/ml2/openvswitch_agent.ini"
    when: migrate

  - name: Update ovs_hybrid_plug=true for respective Neutron ports in mysql
    shell: |
      mysql -u {{ mysql_user }} --password={{ mysql_pass }} -h {{ mysql_host }} -e "use neutron; update ml2_port_bindings set vif_details = '{\"port_filter\": true, \"ovs_hybrid_plug\": true}' where port_id='{{ item }}' limit 1;"
    with_items: false_ports
    when: migrate

  - name: Start neutron services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
    - neutron-openvswitch-agent
    when: migrate

  - name: Start nova services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
    - nova-compute
    when: migrate
